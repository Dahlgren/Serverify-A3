<mah:MetroWindow x:Class="A3ServerTool.MainWindow"
                      xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
                      xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
                      xmlns:d="http://schemas.microsoft.com/expression/blend/2008"
                      xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006"
                      xmlns:local="clr-namespace:A3ServerTool"
                      xmlns:viewModels="clr-namespace:A3ServerTool.ViewModels"
                      xmlns:views="clr-namespace:A3ServerTool.Views"
                      xmlns:mah="http://metro.mahapps.com/winfx/xaml/controls"
                      xmlns:converters="clr-namespace:A3ServerTool.Converters"
                      xmlns:i="http://schemas.microsoft.com/expression/2010/interactivity"
                      mc:Ignorable="d"
                      BorderBrush="{StaticResource ControlSecondaryColorBrush}"
                      WindowTitleBrush="{StaticResource ControlSecondaryColorBrush}"
                      TitleForeground="Black"
                      BorderThickness="1"
                      WindowStartupLocation="CenterScreen"
                      ShowIconOnTitleBar="True"
                      Padding="10,10,10,10"
                      DataContext="{Binding Main, Source={StaticResource Locator}}"
                      mah:DialogParticipation.Register="{Binding}"
                      Closing="MainWindow_OnClosing"
                      WindowCloseButtonStyle="{DynamicResource CleanCloseWindowButtonStyle}"
                      Title="Arma 3 Server Tool"
                      Height="640" 
                      Width="960">
    <i:Interaction.Triggers>
        <i:EventTrigger EventName="Closing">
            <i:InvokeCommandAction Command="{Binding ExitApplicationCommand}" CommandParameter="{Binding RelativeSource={RelativeSource AncestorType={x:Type Window}}}" />
        </i:EventTrigger>
        <i:EventTrigger EventName="Loaded">
            <i:InvokeCommandAction Command="{Binding WindowLoadedCommand}"/>
        </i:EventTrigger>
    </i:Interaction.Triggers>

    <Window.Resources>
        <ResourceDictionary>
            <ResourceDictionary.MergedDictionaries>
                <ResourceDictionary Source="pack://application:,,,/MahApps.Metro;component/Themes/HamburgerMenuTemplate.xaml" />
            </ResourceDictionary.MergedDictionaries>

            <Style x:Key="CleanCloseWindowButtonStyle" TargetType="{x:Type Button}" BasedOn="{StaticResource MetroWindowButtonStyle}">

                <Setter Property="Foreground" Value="Black"/>
                <Style.Triggers>
                    <Trigger Property="IsMouseOver" Value="True">
                        <Setter Property="Background" Value="#EB2F2F" />
                        <Setter Property="Foreground" Value="{DynamicResource WhiteBrush}" />
                    </Trigger>
                    <Trigger Property="IsPressed" Value="True">
                        <Setter Property="Background" Value="#7C0000" />
                    </Trigger>
                </Style.Triggers>
            </Style>

            <DataTemplate x:Key="HamburgerMenuItem" DataType="{x:Type mah:HamburgerMenuGlyphItem}">
                <Grid Height="48">
                    <Grid.ColumnDefinitions>
                        <ColumnDefinition Width="48" />
                        <ColumnDefinition />
                    </Grid.ColumnDefinitions>
                    <Image Margin="12"
                           HorizontalAlignment="Center"
                           VerticalAlignment="Center"
                           Source="{Binding Glyph}"
                           Stretch="UniformToFill" />
                    <TextBlock Grid.Column="1"
                               VerticalAlignment="Center"
                               FontSize="16"
                               Text="{Binding Label}" />
                </Grid>
            </DataTemplate>

            <!--  This is the template for all option menu items.  -->
            <DataTemplate x:Key="HamburgerOptionsMenuItem" DataType="{x:Type mah:HamburgerMenuItem}">
                <Grid Height="48">
                    <Grid.ColumnDefinitions>
                        <ColumnDefinition Width="48" />
                        <ColumnDefinition />
                    </Grid.ColumnDefinitions>
                    <ContentControl Grid.Column="0"
                                    Content="{Binding Tag}"
                                    Focusable="False"
                                    IsTabStop="False" />
                    <TextBlock Grid.Column="1"
                               VerticalAlignment="Center"
                               FontSize="16"
                               Text="{Binding Label}" />
                </Grid>
            </DataTemplate>
            <Style x:Key="HamburgerMenuCreatorsItemStyle"
                   BasedOn="{StaticResource HamburgerMenuItemStyle}"
                   TargetType="{x:Type ListBoxItem}">
                <Setter Property="mah:ItemHelper.ActiveSelectionBackgroundBrush" Value="Transparent" />
                <Setter Property="mah:ItemHelper.ActiveSelectionForegroundBrush" Value="{DynamicResource AccentBaseColorBrush}" />
                <Setter Property="mah:ItemHelper.DisabledForegroundBrush" Value="{DynamicResource GrayNormalBrush}" />
                <Setter Property="mah:ItemHelper.DisabledSelectedBackgroundBrush" Value="Transparent" />
                <Setter Property="mah:ItemHelper.DisabledSelectedForegroundBrush" Value="{DynamicResource GrayNormalBrush}" />
                <Setter Property="mah:ItemHelper.HoverBackgroundBrush" Value="{DynamicResource GrayBrush9}" />
                <Setter Property="mah:ItemHelper.HoverSelectedBackgroundBrush" Value="{DynamicResource GrayBrush9}" />
                <Setter Property="mah:ItemHelper.SelectedBackgroundBrush" Value="Transparent" />
                <Setter Property="mah:ItemHelper.SelectedForegroundBrush" Value="{DynamicResource AccentBaseColorBrush}" />
            </Style>

            <Style x:Key="HamburgerMenuCreatorsStyle"
                   BasedOn="{StaticResource {x:Type mah:HamburgerMenu}}"
                   TargetType="{x:Type mah:HamburgerMenu}">
                <Setter Property="ItemContainerStyle" Value="{StaticResource HamburgerMenuCreatorsItemStyle}" />
                <Setter Property="OptionsItemContainerStyle" Value="{StaticResource HamburgerMenuCreatorsItemStyle}" />
                <Setter Property="PaneBackground" Value="{StaticResource ControlSecondaryColorBrush}" />
                <Setter Property="PaneForeground" Value="{DynamicResource TextBrush}" />
                <Setter Property="ShowSelectionIndicator" Value="True" />
                <Setter Property="Background" Value="LightGray" />
            </Style>
        </ResourceDictionary>

    </Window.Resources>

    <mah:MetroWindow.RightWindowCommands>
        <mah:WindowCommands ShowLastSeparator="True">
            <Label Content="Current profile:" VerticalAlignment="Center"/>
            <Label FontWeight="Bold" 
                   VerticalAlignment="Center"
                   Content="{Binding CurrentProfile.Name, FallbackValue='N/A', TargetNullValue='N/A'}">
                <!--<Label.Content>
                    <PriorityBinding>
                        <Binding Path="CurrentProfile.Name" TargetNullValue="N/A"/>
                        <Binding Source="N/A"/>
                    </PriorityBinding>
                </Label.Content>-->
            </Label>
            <Button Content="Save"/>            
        </mah:WindowCommands>
    </mah:MetroWindow.RightWindowCommands>
    
    <Grid>
        <Grid.Resources>
            <converters:SelectedItemToContentConverter x:Key="SelectedItemToContentConverter" />
            <DataTemplate x:Key="MenuItemTemplate" DataType="{x:Type mah:HamburgerMenuIconItem}">
                <Grid x:Name="RootGrid"
                      Height="48"
                      Background="Transparent">
                    <Grid.ColumnDefinitions>
                        <ColumnDefinition Width="48"></ColumnDefinition>
                        <ColumnDefinition />
                    </Grid.ColumnDefinitions>
                    <ContentControl Grid.Column="0"
                                    HorizontalAlignment="Center"
                                    VerticalAlignment="Center"
                                    Content="{Binding Icon}"
                                    Focusable="False" />
                    <TextBlock Grid.Column="1"
                               VerticalAlignment="Center"
                               FontSize="16"
                               Text="{Binding Label}" />
                </Grid>
                <DataTemplate.Triggers>
                    <DataTrigger
                        Binding="{Binding RelativeSource={RelativeSource FindAncestor, AncestorType={x:Type mah:HamburgerMenu}}, Path=IsPaneOpen}"
                        Value="False">
                        <Setter TargetName="RootGrid" Property="ToolTip" Value="{Binding ToolTip, Mode=OneWay}" />
                    </DataTrigger>
                </DataTemplate.Triggers>
            </DataTemplate>

            <!--  templates for view models  -->
            <DataTemplate DataType="{x:Type viewModels:GeneralViewModel}">
                <views:GeneralView DataContext="{Binding}" />
            </DataTemplate>
            <DataTemplate DataType="{x:Type viewModels:AboutViewModel}">
                <views:AboutView DataContext="{Binding}" />
            </DataTemplate>
            <DataTemplate DataType="{x:Type viewModels:ProfilesViewModel}">
                <views:ProfilesView DataContext="{Binding}" />
            </DataTemplate>
            <DataTemplate DataType="{x:Type viewModels:SettingsViewModel}">
                <views:SettingsView DataContext="{Binding}" />
            </DataTemplate>

        </Grid.Resources>


        <mah:HamburgerMenu x:Name="HamburgerMenuControl"
                                Background="{x:Static SystemParameters.WindowGlassBrush}"
                                DisplayMode="CompactInline"
                                IsPaneOpen="False"
                                ItemTemplate="{StaticResource MenuItemTemplate}"
                                ItemsSource="{Binding MenuItems}"
                                OptionsItemTemplate="{StaticResource MenuItemTemplate}"
                                OptionsItemsSource="{Binding MenuOptionItems}"
                                Style="{StaticResource HamburgerMenuCreatorsStyle}"
                                SelectedIndex="0">

            <!--  select the tag (ViewModel) of the selected item (options item)  -->
            <mah:HamburgerMenu.Content>
                <MultiBinding Converter="{StaticResource SelectedItemToContentConverter}">
                    <Binding FallbackValue="{x:Null}"
                             Mode="OneWay"
                             Path="SelectedItem.Tag"
                             RelativeSource="{RelativeSource Self}" />
                    <Binding FallbackValue="{x:Null}"
                             Mode="OneWay"
                             Path="SelectedOptionsItem.Tag"
                             RelativeSource="{RelativeSource Self}" />
                </MultiBinding>
                
            </mah:HamburgerMenu.Content>
        </mah:HamburgerMenu>

    </Grid>
</mah:MetroWindow>







