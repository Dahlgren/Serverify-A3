<mah:CustomDialog x:Class="A3ServerTool.Views.ProfileDialogView"
                  xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
                  xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
                  xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006"
                  xmlns:d="http://schemas.microsoft.com/expression/blend/2008"
                  xmlns:local="clr-namespace:A3ServerTool.Views"
                  xmlns:dialog="clr-namespace:MahApps.Metro.Controls.Dialogs;assembly=MahApps.Metro"
                  xmlns:mah="http://metro.mahapps.com/winfx/xaml/controls"
                  mc:Ignorable="d"
                  DataContext="{Binding ProfileDialog, Source={StaticResource Locator}}"
                  dialog:DialogParticipation.Register="{Binding}"
                  Title="{Binding HeaderText, Mode=OneWay, UpdateSourceTrigger=PropertyChanged}">

    <dialog:CustomDialog.Content>
        <Grid>
            <Grid.RowDefinitions>
                <RowDefinition Height="*"></RowDefinition>
                <RowDefinition Height="*"></RowDefinition>
            </Grid.RowDefinitions>

            <!--<Label Grid.Row="0" Margin="0 0 0 0" 
               Style="{StaticResource DescriptionHeaderStyle}"
               Content="{Binding HeaderText, Mode=OneWay, UpdateSourceTrigger=PropertyChanged}"/>-->

            <StackPanel Grid.Row="0">
                <TextBlock Margin="{StaticResource LabelMargin}"
                       HorizontalAlignment="Left"
                       VerticalAlignment="Top"
                       Text="Name"
                       TextWrapping="Wrap"
                       FontWeight="Bold"
                       FontSize="14" />
                <TextBox x:Name="NameTextBox" Margin="8,0,0,0"
                     mah:TextBoxHelper.Watermark="Profile name"                     
                     Text="{Binding ProfileName, ValidatesOnDataErrors=True, Mode=TwoWay,  UpdateSourceTrigger=PropertyChanged, NotifyOnValidationError=True}"/>

                <TextBlock Margin="{StaticResource  LabelMargin}"
                       HorizontalAlignment="Left"
                       VerticalAlignment="Top"
                       Text="Description"
                       TextWrapping="Wrap"
                       FontWeight="Bold"
                       FontSize="14" />
                <TextBox x:Name="DescriptionTextBox"
                     Margin="8,0,0,0"
                     mah:TextBoxHelper.Watermark="Short profile description"
                     Text="{Binding ProfileDescription, Mode=TwoWay, ValidatesOnDataErrors=True, UpdateSourceTrigger=PropertyChanged, NotifyOnValidationError=True}"/>

                <TextBlock Margin="{StaticResource LabelMargin}"
                       HorizontalAlignment="Left"
                       VerticalAlignment="Top"
                       Text="Profile type"
                       TextWrapping="Wrap"
                       FontWeight="Bold"
                       FontSize="14" />

                <mah:SplitButton x:Name="GameTypeSplitButton"
                             Margin="8,0,0,0"
                             HorizontalContentAlignment="Left"
                             mah:TextBoxHelper.Watermark="Game type"
                             ItemsSource="{Binding Source={StaticResource EnumGameTypes}}"
                             IsEnabled="{Binding IsEditMode, Converter={StaticResource InverseBoolConverter}}"
                             SelectedItem="{Binding ProfileType, Mode=TwoWay}"
                             SelectedIndex="0"
                             ToolTip="You can only change this value only on new profile creation."    />

                <TextBlock Margin="{StaticResource LabelMargin}"
                           HorizontalAlignment="Left"
                           VerticalAlignment="Top"
                           Text="Store current server settings in this profile"
                           TextWrapping="Wrap"
                           FontWeight="Bold"
                           FontSize="14" />

                <mah:ToggleSwitch Margin="8,0,0,8"
                                  OnLabel="Yes"
                                  OffLabel="No" 
                                  HorizontalAlignment="Left"
                                  VerticalAlignment="Top"
                                  Style="{StaticResource MahApps.Metro.Styles.ToggleSwitch.Win10}" FontSize="14"
                                  IsEnabled="{Binding IsEditMode, Converter={StaticResource InverseBoolConverter}}"
                                  IsChecked="{Binding HasToSaveCurrentProfile}"/>
            </StackPanel>
            <Grid Grid.Row="1">
                <Grid.ColumnDefinitions>
                    <ColumnDefinition Width="11*"></ColumnDefinition>
                    <ColumnDefinition Width="136*"/>
                </Grid.ColumnDefinitions>

                <DockPanel Grid.ColumnSpan="2">
                    <Button HorizontalAlignment="Left"
                        VerticalAlignment="Center"
                        MinWidth="64"
                        x:Name="OkButton"                        
                        Margin="{StaticResource ControlMargin}"
                        Command="{Binding OkCommand}"
                        Content="{Binding ButtonText, Mode=OneWay, UpdateSourceTrigger=PropertyChanged}">
                        <Button.Style>
                            <Style TargetType="Button" BasedOn="{StaticResource MetroFlatButton}">
                                <Setter Property="IsEnabled" Value="False"></Setter>
                                <Setter Property="Background" Value="{DynamicResource AccentColorBrush}" />
                                <Setter Property="Foreground" Value="{DynamicResource IdealForegroundColorBrush}" />
                                <Setter Property="FocusVisualStyle" Value="{x:Null}"></Setter>

                                <Style.Triggers>
                                    <MultiDataTrigger>
                                        <MultiDataTrigger.Conditions>
                                            <Condition Binding="{Binding Path=(Validation.HasError), ElementName=NameTextBox}" Value="False"></Condition>
                                        </MultiDataTrigger.Conditions>
                                        <Setter Property="IsEnabled" Value="True"></Setter>
                                    </MultiDataTrigger>
                                </Style.Triggers>
                            </Style>
                        </Button.Style>
                    </Button>

                    <Button Style="{StaticResource MetroFlatButton}"
                        MinWidth="64"
                        HorizontalAlignment="Right"
                        VerticalAlignment="Center"
                        x:Name="CancelButton"
                        Margin="{StaticResource ControlMargin}"
                        Content="Cancel"
                        Command="{Binding CancelCommand}"/>
                </DockPanel>
            </Grid>
        </Grid>
    </dialog:CustomDialog.Content>

    <!--<dialog:CustomDialog.DialogBottom> 
    For some reason validation stops working in this tag
    </dialog:CustomDialog.DialogBottom>-->
</mah:CustomDialog>

